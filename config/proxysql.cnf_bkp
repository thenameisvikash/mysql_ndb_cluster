# ProxySQL Configuration for MySQL NDB Cluster
# Optimized for high availability and load balancing

# ProxySQL Data Directory
datadir="/var/lib/proxysql"

# ---------------------
# Admin Interface Setup
# ---------------------
admin_variables={
    # Credentials for ProxySQL admin interface (MySQL client on port 6032)
    admin_credentials="admin:admin;radmin:radmin"  # Kept original passwords
    mysql_ifaces="0.0.0.0:6032"  # Kept original interface settings
    admin_ifaces="0.0.0.0:6032"  # Kept original interface settings
    web_enabled=false
    refresh_interval=2000
    
    # IMPROVED: Added for multi-ProxySQL configuration
    cluster_username="proxysql_cluster"
    cluster_password="clusterpass"
    cluster_check_interval_ms=1000
    cluster_check_status_frequency=10
}

# ---------------------
# MySQL Backend Settings
# ---------------------
mysql_variables={
    # Client-facing MySQL interface
    interfaces="0.0.0.0:6033"     # PRODUCTION: Restrict to application networks
    server_version="8.0.32"       # Match your MySQL NDB Cluster version
    
    # IMPROVED: Enhanced monitoring settings for NDB Cluster
    monitor_username="proxysql_monitor"
    monitor_password="monitorpass123"
    monitor_connect_interval=1000  # Reduced to 1 second for faster failure detection
    monitor_ping_interval=500      # IMPROVED: Faster ping checks
    monitor_read_only_timeout=1500
    
    # IMPROVED: NDB Cluster-specific monitoring queries
    monitor_ping_interval_server_msec=500
    monitor_ping_timeout_server=200
    monitor_history=60000          # Keep 1 minute of monitoring history
    monitor_connect_timeout=600    # Timeout in ms
    monitor_enabled=true
    
    # IMPROVED: Connection handling for NDB Cluster
    default_query_timeout=3600000  # Default query timeout (1 hour)
    default_connect_timeout=3000   # IMPROVED: Reduced from 10s to 3s
    have_compress=true
    poll_timeout=2000
    max_connections=4096           # IMPROVED: Increased for better handling of connection spikes
    free_connections_pct=10        # IMPROVED: Keep 10% connections in pool
    
    # Thread settings
    threads=8                      # IMPROVED: Increased for better concurrency
    
    # IMPROVED: Connection multiplexing settings for NDB Cluster
    connection_max_age_ms=0        # Disable connection aging
    max_transaction_time=14400000  # Max transaction time (4 hours)
    multiplexing=true              # Enable multiplexing
    
    # IMPROVED: Add query processor settings
    query_processor_iterations=0   # Process statements until completion
    query_processor_regex=1        # Use regex for query matching
    
    # IMPROVED: Add automatic failover settings
    connect_retries_on_failure=5
    connect_timeout_server=3000    # Connect timeout for backend
    ping_timeout_server=500        # Ping timeout
}

# ---------------------
# MySQL Servers (NDB Cluster SQL Nodes)
# ---------------------
# IMPROVED: Added better comments and more server status parameters
mysql_servers=(
    # Write hostgroup (0) - Both SQL nodes with different weights
    {
        address="mysql1"
        port=3306
        hostgroup=0
        weight=1000
        max_connections=500     # IMPROVED: Increased
        max_replication_lag=0   # IMPROVED: Not applicable for NDB but good to specify
        use_ssl=0               # Kept SSL disabled as requested
        status="ONLINE"
        comment="NDB SQL Node 1 - Write"
    },
    {
        address="mysql2"
        port=3306
        hostgroup=0
        weight=500
        max_connections=500     # IMPROVED: Increased
        max_replication_lag=0   # IMPROVED: Not applicable for NDB but good to specify
        use_ssl=0               # Kept SSL disabled as requested
        status="ONLINE"
        comment="NDB SQL Node 2 - Write"
    },
    
    # Read hostgroup (10) - Both SQL nodes with different weights (reversed)
    {
        address="mysql1"
        port=3306
        hostgroup=10
        weight=500
        max_connections=500     # IMPROVED: Increased
        max_replication_lag=0   # IMPROVED: Not applicable for NDB but good to specify
        use_ssl=0               # Kept SSL disabled as requested
        status="ONLINE"
        comment="NDB SQL Node 1 - Read"
    },
    {
        address="mysql2"
        port=3306
        hostgroup=10
        weight=1000
        max_connections=500     # IMPROVED: Increased
        max_replication_lag=0   # IMPROVED: Not applicable for NDB but good to specify
        use_ssl=0               # Kept SSL disabled as requested
        status="ONLINE"
        comment="NDB SQL Node 2 - Read"
    }
)

# ---------------------
# MySQL Users (Frontend Authentication)
# ---------------------
# Kept original passwords as requested
mysql_users=(
    # Regular user with transaction persistence
    {
        username="testuser"
        password="testpassword"  # Kept original password
        default_hostgroup=0
        active=1
        use_ssl=0               # Kept SSL disabled as requested
        default_schema="test_db"
        transaction_persistent=1
        max_connections=1000
    },
    # Read-only user
    {
        username="readonly"
        password="readonlypass"  # Kept original password
        default_hostgroup=10
        active=1
        use_ssl=0               # Kept SSL disabled as requested
        default_schema="test_db"
        transaction_persistent=0
        max_connections=1000
    },
    # Read-write user
    {
        username="readwrite"
        password="readwritepass"  # Kept original password
        default_hostgroup=0
        active=1
        use_ssl=0               # Kept SSL disabled as requested
        default_schema="test_db"
        transaction_persistent=1
        max_connections=1000
    },
    # Admin user
    {
        username="admin"
        password="adminpass"      # Kept original password
        default_hostgroup=0
        active=1
        use_ssl=0               # Kept SSL disabled as requested
        default_schema="test_db"
        transaction_persistent=1
        max_connections=1000
    },
    # Monitoring user
    {
        username="proxysql_monitor"
        password="monitorpass123"  # Kept original password
        default_hostgroup=0
        active=1
        use_ssl=0               # Kept SSL disabled as requested
        default_schema="information_schema"
        transaction_persistent=0
        max_connections=100
    }
)

# ---------------------
# Query Routing Rules
# ---------------------
# IMPROVED: Added NDB Cluster-specific rules and optimized existing ones
mysql_query_rules=(
    # Route writes to hostgroup 0 (both SQL nodes can handle writes in NDB Cluster)
    {
        rule_id=1
        active=1
        match_pattern="^INSERT"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=2
        active=1
        match_pattern="^UPDATE"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=3
        active=1
        match_pattern="^DELETE"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=4
        active=1
        match_pattern="^REPLACE"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=5
        active=1
        match_pattern="^CREATE"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=6
        active=1
        match_pattern="^ALTER"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=7
        active=1
        match_pattern="^DROP"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=8
        active=1
        match_pattern="^TRUNCATE"
        destination_hostgroup=0
        apply=1
    },
    # IMPROVED: Added specific rule for NDB transactions
    {
        rule_id=9
        active=1
        match_pattern="^START TRANSACTION|^BEGIN"
        destination_hostgroup=0
        apply=1
    },
    {
        rule_id=10
        active=1
        match_pattern="^COMMIT|^ROLLBACK"
        destination_hostgroup=0
        apply=1
    },
    # Route reads to hostgroup 10 (both SQL nodes can handle reads in NDB Cluster)
    {
        rule_id=100
        active=1
        match_pattern="^SELECT"
        destination_hostgroup=10
        apply=1
    },
    # IMPROVED: Specific rule for NDB Cluster system tables
    {
        rule_id=101
        active=1
        match_pattern="^SELECT.*ndb_.*"
        destination_hostgroup=0  # Use write hostgroup for NDB system tables
        apply=1
    },
    {
        rule_id=102
        active=1
        match_pattern="^SHOW"
        destination_hostgroup=10
        apply=1
    },
    {
        rule_id=103
        active=1
        match_pattern="^(DESCRIBE|EXPLAIN)"
        destination_hostgroup=10
        apply=1
    },
    # User-specific routing
    {
        rule_id=200
        active=1
        username="readonly"
        destination_hostgroup=10
        apply=1
    },
    {
        rule_id=201
        active=1
        username="readwrite"
        destination_hostgroup=0
        apply=1
    },
    # IMPROVED: Added specific rule for NDB health checks
    {
        rule_id=300
        active=1
        match_pattern="SHOW ENGINE NDB STATUS"
        destination_hostgroup=0
        apply=1
    },
    # Fallback rule - route to writer hostgroup if no other rule matches
    {
        rule_id=1000
        active=1
        match_pattern=".*"
        destination_hostgroup=0
        apply=1
    }
)

# IMPROVED: Added MySQL replication hostgroups
# Not strictly necessary for NDB Cluster but useful for monitoring
mysql_replication_hostgroups=(
    {
        writer_hostgroup=0
        reader_hostgroup=10
        comment="NDB Cluster hostgroups"
    }
)

# IMPROVED: Added scheduler for health checks
scheduler=(
    {
        id=1
        active=1
        interval_ms=5000
        filename="/usr/bin/proxysql_ndb_check.sh"
        arg1="--verbose=1"
        comment="NDB Cluster health check"
    }
)

# ---------------------
# PRODUCTION NOTES
# ---------------------
# - SSL is currently disabled as requested (enable it in production)
# - Admin interfaces are open to all networks as requested (restrict in production)
# - Original passwords are maintained as requested (use stronger ones in production)
# - Added specific NDB Cluster monitoring
# - Enhanced connection settings for better performance
# - Added scheduler for external health checks
# - Consider adding more MySQL servers for better HA
# - Implement ProxySQL clustering for multi-node setups
# - Set up proper monitoring and alerting
# - Create the proxysql_ndb_check.sh script to perform NDB-specific health checks